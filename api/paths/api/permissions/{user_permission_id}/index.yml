patch:
  description:
    Update user permission. User needs to have `user_permissions.manage`
    permission in order to call this API successfully. Any field that is not provided
    in the request will not be updated.
  tags:
    - User Permission Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: user_permission_id
      in: path
      description: The user permission to be updated.
      schema:
        $ref: "../../../../components/schemas/UserPermission.yml#/properties/id"
      required: true
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            permission_name:
              $ref: "../../../../components/schemas/UserPermission.yml#/properties/permission_name"
            description:
              $ref: "../../../../components/schemas/UserPermission.yml#/properties/description"
  responses:
    "200":
      description: User permission updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            $ref: "../../../../components/schemas/UserPermission.yml"
    "400":
      description:
        Failed to update user permission because the information provided
        does not satisfy the constraints.
    "401":
      description:
        Failed to update user permission because the user is not logged
        in.
    "403":
      description: Failed to update user permission because the user does not
        have the necessary permission.
    "404":
      description: Failed to update user permission because no user permission
        with the provided user_permission_id is found.
delete:
  description:
    Delete user permission. User needs to have `user_permissions.manage`
    permission in order to call this API successfully.
  tags:
    - User Permission Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: user_permission_id
      in: path
      description: The user permission to be deleted.
      schema:
        $ref: "../../../../components/schemas/UserPermission.yml#/properties/id"
      required: true
  responses:
    "200":
      description: User permission deleted successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../components/schemas/Token.yml"
    "401":
      description:
        Failed to delete user permission because the user is not logged
        in.
    "403":
      description: Failed to delete user permission because the user does not
        have the necessary permission.
    "404":
      description: Failed to delete user permission because no user permission
        with the provided user_permission_id is found.
