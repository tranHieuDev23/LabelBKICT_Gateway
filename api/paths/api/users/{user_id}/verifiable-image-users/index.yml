post:
  description: Add a new user to the list of users, whose images can be verified
    by the provided user. User needs to have `users.manage` permission in order
    to call this API successfully.
  tags:
    - User Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: user_id
      in: path
      description: The user whose information will be updated.
      schema:
        $ref: "../../../../../components/schemas/User.yml#/properties/id"
      required: true
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            image_of_user_id:
              $ref: "../../../../../components/schemas/User.yml#/properties/id"
  responses:
    "200":
      description: User updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            type: object
            properties:
              user_can_verify_user_image:
                type: object
                properties:
                  user:
                    $ref: "../../../../../components/schemas/User.yml"
    "400":
      description:
        Failed to update user because the user whose image can be verified
        is the same as the one being updated.
    "401":
      description: Failed to update user because the user is not logged in.
    "403":
      description:
        Failed to update user because the user does not have the necessary
        permission.
    "404":
      description: Failed to update user because either one of the users cannot
        be found.
    "409":
      description: Failed to update user because the user has already been in
        the list.
get:
  description:
    Get the list of users, whose images can be verified by the provided
    user. User needs to have `users.manage` permission in order to call this API
    successfully.
  tags:
    - User Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: user_id
      in: path
      description: The user whose information will be retrieved.
      schema:
        $ref: "../../../../../components/schemas/User.yml#/properties/id"
      required: true
    - name: offset
      description: The index of the first item to be returned.
      in: query
      schema:
        type: integer
        minimum: 0
        default: 0
    - name: limit
      description: The maximum number of items to be returned.
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 10
  responses:
    "200":
      description: User list retrieved successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            type: object
            properties:
              total_user_count:
                type: integer
                description: The total number of user in the list.
              user_list:
                type: array
                items:
                  type: object
                  properties:
                    user:
                      $ref: "../../../../../components/schemas/User.yml"
    "400":
      description: Failed to get user list because the arguments provided do not
        satisfy the constraints.
    "401":
      description: Failed to update user because the user is not logged in.
    "403":
      description:
        Failed to update user because the user does not have the necessary
        permission.
    "404":
      description: Failed to remove user because the user cannot be found.
