patch:
  description:
    Update user information. User needs to have `users.manage` permission
    in order to call this API to update other user's information successfully.
    Any field that is not provided in the request will not be updated.
  tags:
    - User Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: user_id
      in: path
      description: The user whose information will be updated.
      schema:
        $ref: "../../../../components/schemas/User.yml#/properties/id"
      required: true
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            username:
              $ref: "../../../../components/schemas/User.yml#/properties/username"
            display_name:
              $ref: "../../../../components/schemas/User.yml#/properties/display_name"
            password:
              $ref: "../../../../components/schemas/UserPassword.yml"
  responses:
    "200":
      description: User updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            $ref: "../../../../components/schemas/User.yml"
    "400":
      description: Failed to update user because the information provided does
        not satisfy the constraints.
    "401":
      description: Failed to update user because the user is not logged in.
    "403":
      description:
        Failed to update user because the user does not have the necessary
        permission.
    "409":
      description: Failed to update user because the username has already been
        taken.
