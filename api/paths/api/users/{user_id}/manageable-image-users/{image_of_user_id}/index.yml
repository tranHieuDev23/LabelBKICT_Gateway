patch:
  description:
    Update the relation of a new user in the list of users, whose images
    can be managed by the provided user. User needs to have `users.manage` permission
    in order to call this API successfully.
  tags:
    - User Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: user_id
      in: path
      description: The user whose information will be updated.
      schema:
        $ref: "../../../../../../components/schemas/User.yml#/properties/id"
      required: true
    - name: image_of_user_id
      in: path
      description: The user whose image can be managed.
      schema:
        $ref: "../../../../../../components/schemas/User.yml#/properties/id"
      required: true
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            can_edit:
              type: boolean
              description: If true, the user can edit images of this user. If
                false, the user can only view the images.
  responses:
    "200":
      description: User updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            type: object
            properties:
              user_can_manage_user_image:
                type: object
                properties:
                  user:
                    $ref: "../../../../../../components/schemas/User.yml"
                  can_edit:
                    type: boolean
                    description: If true, the user can edit images of this user.
                      If false, the user can only view the images.
    "400":
      description:
        Failed to update user because the user whose image being managed
        is the same as the one being updated.
    "401":
      description: Failed to update user because the user is not logged in.
    "403":
      description:
        Failed to update user because the user does not have the necessary
        permission.
    "404":
      description: Failed to remove user because either one of the users cannot
        be found.
    "409":
      description: Failed to remove user because the user is not in the list.
delete:
  description:
    Remove an user from the list of users, whose images can be managed
    by the provided user. User needs to have `users.manage` permission in order
    to call this API successfully.
  tags:
    - User Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: user_id
      in: path
      description: The user whose information will be updated.
      schema:
        $ref: "../../../../../../components/schemas/User.yml#/properties/id"
      required: true
    - name: image_of_user_id
      in: path
      description: The user whose image can be managed.
      schema:
        $ref: "../../../../../../components/schemas/User.yml#/properties/id"
      required: true
  responses:
    "200":
      description: User updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../../components/schemas/Token.yml"
    "401":
      description: Failed to remove user because the user is not logged in.
    "403":
      description:
        Failed to remove user because the user does not have the necessary
        permission.
    "404":
      description: Failed to remove user because either one of the users cannot
        be found.
    "409":
      description: Failed to remove user because the user is not in the list.
