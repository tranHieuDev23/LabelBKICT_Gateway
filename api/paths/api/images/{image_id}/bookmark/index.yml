post:
  description: Create a new bookmark on an image. User needs to either (1) have
    `images.manage.self` permission and is bookmarking an image of their own,  (2)
    have `images.verify` permission and is bookmarking an image with PUBLISHED
    status that they are allowed to verify, or (3) have `images.manage.all` permission
    and is bookmarking an image that they are allowed to manage in order to call
    this API successfully.
  tags:
    - Image Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: image_id
      in: path
      description: The image to be bookmarked.
      schema:
        $ref: "../../../../../components/schemas/Image.yml#/properties/id"
      required: true
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            description:
              $ref: "../../../../../components/schemas/ImageBookmark.yml#/properties/description"
  responses:
    "200":
      description: Image bookmark created successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            type: object
            properties:
              image_bookmark:
                $ref: "../../../../../components/schemas/ImageBookmark.yml"
    "401":
      description:
        Failed to create image bookmark because the user is not logged
        in.
    "403":
      description:
        Failed to create image bookmark because the user does not have
        the necessary permission.
    "404":
      description:
        Failed to create image bookmark because the image with image_id
        does not exist.
get:
  description: Get the session user's bookmark on an image. User needs to either
    (1) have `images.manage.self` permission and is bookmarking an image of their
    own,  (2) have `images.verify` permission and is bookmarking an image with
    PUBLISHED status that they are allowed to verify, or (3) have `images.manage.all`
    permission and is bookmarking an image that they are allowed to manage in
    order to call this API successfully.
  tags:
    - Image Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: image_id
      in: path
      description: The image to be get bookmark from.
      schema:
        $ref: "../../../../../components/schemas/Image.yml#/properties/id"
      required: true
  responses:
    "200":
      description: Image bookmark retrieved successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            type: object
            properties:
              image_bookmark:
                $ref: "../../../../../components/schemas/ImageBookmark.yml"
    "401":
      description:
        Failed to retrieve image bookmark because the user is not logged
        in.
    "403":
      description: Failed to retrieve image bookmark because the user does not
        have the necessary permission.
    "404":
      description:
        Failed to retrieve image bookmark because the image with image_id
        does not exist.
    "409":
      description: Failed to retrieve image bookmark because the user has not
        bookmarked the image yet.
patch:
  description:
    Update the session user's bookmark on an image. User needs to either
    (1) have `images.manage.self` permission and is bookmarking an image of their
    own,  (2) have `images.verify` permission and is bookmarking an image with
    PUBLISHED status that they are allowed to verify, or (3) have `images.manage.all`
    permission and is bookmarking an image that they are allowed to manage in
    order to call this API successfully.
  tags:
    - Image Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: image_id
      in: path
      description: The image to update bookmark.
      schema:
        $ref: "../../../../../components/schemas/Image.yml#/properties/id"
      required: true
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            description:
              $ref: "../../../../../components/schemas/ImageBookmark.yml#/properties/description"
  responses:
    "200":
      description: Image bookmark updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            type: object
            properties:
              image_bookmark:
                $ref: "../../../../../components/schemas/ImageBookmark.yml"
    "401":
      description:
        Failed to updated image bookmark because the user is not logged
        in.
    "403":
      description: Failed to updated image bookmark because the user does not
        have the necessary permission.
    "404":
      description:
        Failed to updated image bookmark because the image with image_id
        does not exist.
    "409":
      description:
        Failed to updated image bookmark because the user has not bookmarked
        the image yet.
delete:
  description:
    Delete the session user's bookmark on an image. User needs to either
    (1) have `images.manage.self` permission and is bookmarking an image of their
    own,  (2) have `images.verify` permission and is bookmarking an image with
    PUBLISHED status that they are allowed to verify, or (3) have `images.manage.all`
    permission and is bookmarking an image that they are allowed to manage in
    order to call this API successfully.
  tags:
    - Image Management
  security:
    - AuthenticationToken: []
  parameters:
    - name: image_id
      in: path
      description: The image to delete bookmark.
      schema:
        $ref: "../../../../../components/schemas/Image.yml#/properties/id"
      required: true
  responses:
    "200":
      description: Image bookmark deleted successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../../../components/schemas/Token.yml"
    "401":
      description:
        Failed to delete image bookmark because the user is not logged
        in.
    "403":
      description:
        Failed to delete image bookmark because the user does not have
        the necessary permission.
    "404":
      description:
        Failed to delete image bookmark because the image with image_id
        does not exist.
    "409":
      description:
        Failed to delete image bookmark because the user has not bookmarked
        the image yet.
