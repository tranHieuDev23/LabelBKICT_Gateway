post:
  description:
    Upload a new image to the system. User needs to have `images.upload`
    permission in order to call this API successfully.
  tags:
    - Image Management
  security:
    - AuthenticationToken: []
  requestBody:
    required: true
    content:
      multipart/form-data:
        schema:
          type: object
          properties:
            image_type_id:
              type: string
              description: Image type ID, should be unique across all image type.
              pattern: "^\\d*$"
              default: ""
            image_tag_id_list:
              type: string
              description:
                A comma-separated list of Image Tag IDs, to be automatically
                assigned to the image after being uploaded.
              pattern: "^((\\d+,){0,9}(\\d+))?$"
              default: ""
            description:
              $ref: "../../../components/schemas/Image.yml#/properties/description"
            image_file:
              type: string
              format: binary
              description: The image file to be uploaded.
        encoding:
          image_file:
            contentType: image/*
  responses:
    "200":
      description: The image is uploaded successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../components/schemas/Token.yml"
      content:
        application/json:
          schema:
            $ref: "../../../components/schemas/Image.yml"
    "400":
      description:
        Failed to upload image because any of the information provided
        does not satisfy the constraints.
    "401":
      description: Failed to upload image because the user is not logged in.
    "403":
      description:
        Failed to upload image because the user does not have the necessary
        permission.
    "404":
      description: Failed to upload image because image_type_id is provided and
        image type with image_type_id does not exist, or image_tag_id_list is
        provided and the image tags with those IDs do not exist.
    "409":
      description: Failed to upload image because image_type_id is provided, but
        the list of image tag IDs provided in the request is not allowed for the
        image type.
patch:
  description:
    Update image list. This feature only allows mass updating of image
    type. For every image in the request, user needs to either (1) have `images.manage.self`
    permission and is updating an image of their own, or (2) have `images.manage.all`
    permission and is updating an image that they are allowed to edit in order
    to call this API successfully.
  tags:
    - Image List Management
  security:
    - AuthenticationToken: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            image_id_list:
              type: array
              items:
                $ref: "../../../components/schemas/Image.yml#/properties/id"
              minItems: 1
              maxItems: 500
              description: The list of image to be updated.
            image_type_id:
              $ref: "../../../components/schemas/ImageType.yml#/properties/id"
  responses:
    "200":
      description: The image list is updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../components/schemas/Token.yml"
    "400":
      description: Failed to update image list because any of the information
        provided does not satisfy the constraints.
    "401":
      description: Failed to update image list because the user is not logged
        in.
    "403":
      description: Failed to update image list because the user does not have
        the necessary permission.
    "404":
      description: Failed to update image list because one or more images in the
        provided list, or the image type with image_type_id does not exist.
delete:
  description: Delete image list. For every image in the request, user needs to
    either (1) have `images.manage.self` permission and is deleting an image of
    their own, or (2) have `images.manage.all` permission and is deleting an image
    that they are allowed to edit in order to call this API successfully.
  tags:
    - Image List Management
  security:
    - AuthenticationToken: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          properties:
            image_id_list:
              type: array
              items:
                $ref: "../../../components/schemas/Image.yml#/properties/id"
              minItems: 1
              maxItems: 500
              description: The list of image to be deleted.
  responses:
    "200":
      description: The image list is updated successfully.
      headers:
        Set-Cookie:
          description: Renewed authentication token, if the user old token is
            about to expire.
          schema:
            $ref: "../../../components/schemas/Token.yml"
    "400":
      description: Failed to delete image list because any of the information
        provided does not satisfy the constraints.
    "401":
      description: Failed to delete image list because the user is not logged
        in.
    "403":
      description: Failed to delete image list because the user does not have
        the necessary permission.
    "404":
      description: Failed to delete image list because one or more images in the
        provided list does not exist.
